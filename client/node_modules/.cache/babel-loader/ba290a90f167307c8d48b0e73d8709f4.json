{"ast":null,"code":"var _jsxFileName = \"/home/awaab/Documents/Pro Projects/Mern Projects/Expenses/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; // Initial state\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTIONS_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTIONS_ERROR',\n        payload: error.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Context-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction);\n    } catch (error) {}\n\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.errors,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post","errors"],"sources":["/home/awaab/Documents/Pro Projects/Mern Projects/Expenses/client/src/context/GlobalState.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n// Initial state\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true,\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTIONS_ERROR',\n        payload: error.response.data.error,\n      });\n    }\n  }\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id,\n      });\n    } catch (error) {\n      dispatch({\n        type: 'TRANSACTIONS_ERROR',\n        payload: error.response.data.error,\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Context-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction)\n    } catch (error) {}\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        error: state.errors,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,EADK;EAEnBC,KAAK,EAAE,IAFY;EAGnBC,OAAO,EAAE;AAHU,CAArB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC9C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD8C,CAG9C;;EACA,eAAeS,eAAf,GAAiC;IAC/B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAlB;MAEAH,QAAQ,CAAC;QACPI,IAAI,EAAE,kBADC;QAEPC,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;MAFX,CAAD,CAAR;IAID,CAPD,CAOE,OAAOZ,KAAP,EAAc;MACdM,QAAQ,CAAC;QACPI,IAAI,EAAE,oBADC;QAEPC,OAAO,EAAEX,KAAK,CAACa,QAAN,CAAeD,IAAf,CAAoBZ;MAFtB,CAAD,CAAR;IAID;EACF;;EACD,eAAec,iBAAf,CAAiCC,EAAjC,EAAqC;IACnC,IAAI;MACF,MAAMlB,KAAK,CAACmB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;MAEAT,QAAQ,CAAC;QACPI,IAAI,EAAE,oBADC;QAEPC,OAAO,EAAEI;MAFF,CAAD,CAAR;IAID,CAPD,CAOE,OAAOf,KAAP,EAAc;MACdM,QAAQ,CAAC;QACPI,IAAI,EAAE,oBADC;QAEPC,OAAO,EAAEX,KAAK,CAACa,QAAN,CAAeD,IAAf,CAAoBZ;MAFtB,CAAD,CAAR;IAID;EACF;;EAED,eAAeiB,cAAf,CAA8BC,WAA9B,EAA2C;IACzC,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB;MADT;IADI,CAAf;;IAMA,IAAI;MACF,MAAMZ,GAAG,GAAG,MAAMX,KAAK,CAACwB,IAAN,CAAW,sBAAX,EAAmCH,WAAnC,CAAlB;IACD,CAFD,CAEE,OAAOlB,KAAP,EAAc,CAAE;;IAClBM,QAAQ,CAAC;MACPI,IAAI,EAAE,iBADC;MAEPC,OAAO,EAAEO;IAFF,CAAD,CAAR;EAID;;EAED,oBACE,oBAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE;MACLnB,YAAY,EAAEM,KAAK,CAACN,YADf;MAELC,KAAK,EAAEK,KAAK,CAACiB,MAFR;MAGLrB,OAAO,EAAEI,KAAK,CAACJ,OAHV;MAILM,eAJK;MAKLO,iBALK;MAMLG;IANK,CADT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAUGb,QAVH,CADF;AAcD,CAjEM"},"metadata":{},"sourceType":"module"}